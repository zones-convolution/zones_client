# Thanks to Pamplejuce for getting this on the right track, https://github.com/sudara/pamplejuce/

name: build_and_release_win

on:
  workflow_dispatch:

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  BUILD_TYPE: Release
  BUILD_DIR: builds/x64-msvc/client

jobs:
  build_and_package:
    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: Windows
            os: windows-latest
            pluginval-binary: ./pluginval.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Setup NuGet.exe for use with actions
        uses: NuGet/setup-nuget@v2.0.1

      - name: Build ui
        uses: ./.github/actions/build_ui

      - name: Build and Test
        uses: ./.github/actions/build_and_test_win

      - name: Setup Environment
        uses: ./.github/actions/setup_environment

      - name: Pluginval
        uses: ./.github/actions/pluginval
        with:
          VERSION: v1.0.3
          OS: Windows
          BINARY: ./pluginval.exe
          VST3_PATH: ${{ env.VST3_PATH }}


      - name: Generate Installer
        run: |
          iscc "installer.iss"
          mv "Output/${{ env.ARTIFACT_NAME_WINDOWS }}.exe" "${{ env.ARTIFACTS_PATH }}/"

      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME_WINDOWS }}.exe
          path: ${{ env.ARTIFACTS_PATH }}/${{ env.ARTIFACT_NAME_WINDOWS }}.exe

  release:
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    needs: build_and_package
    permissions:
      contents: write

    steps:
      - name: Get Artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          files: |
            */*.exe